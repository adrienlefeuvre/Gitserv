extend layout 

block head 
  link(rel="stylesheet", href="/css/bootstrap.min.css")
  link(rel="stylesheet", href="global.css")
  script(src="/js/jquery-2.1.4.min.js")
  script(src="/js/bootstrap.min.js")
  script(src="//d3js.org/d3.v3.min.js")

block content 
  body
  div.container
    div.row
      div.col-md-1
        button.btn.btn-danger#logout(href='/logout' onclick='document.location.href=\'/logout\'') Logout
      div.col-md-3.col-md-offset-3
        p #{name}
    div.row.aff
      div.col-md-6
        button.btn.btn-success#metrics Show Metrics
      
  
  script
    :coffee-script
      $('#metrics').click (e) ->
        if $('.point')[0] then return
        $.getJSON '/metrics.json', (data) ->
          c = ""
          margin = {top: 20, right: 20, bottom: 30, left: 40}
          width = 1200 - margin.left - margin.right
          height = 700 - margin.top - margin.bottom
          datap=[]
          for metric in data 
            c += "#{metric.timestamp} #{metric.value}, "
            datap.push {x:+metric.timestamp,y:+metric.value}
          $('.aff').append c

          x = d3.scale.linear ""
            .range [0, width]
          y = d3.scale.linear ""
            .range [height, 0]
          doc = d3.select "body" 
          svg = doc.append "svg"
            .attr "class", "graph col-md-8 col-md-offset-2"
            .attr "width", width + 100 + margin.left + margin.right
            .attr "height", height + margin.top + margin.bottom
          .append "g"
            .attr "transform", "translate(" + margin.left + "," + margin.top + ")";
          
          x.domain(d3.extent(datap, (d) -> d.x)).nice()
          y.domain(d3.extent(datap, (d) -> d.y)).nice()
          
          svg.append("g")
            .attr "class", "x axis"
            .attr "transform", "translate(0," + height + ")"
            .call d3.svg.axis().scale(x).orient "bottom";
          
          svg.append("g")
            .attr "class", "y axis"
            .call d3.svg.axis().scale(y).orient "left";
          
          svg.selectAll ".point"
              .data(datap)
            .enter().append "path"
              .attr "class", "point"
              .attr "d", d3.svg.symbol().type "circle"
              .attr "transform", (d) -> "translate(" + x(d.x) + "," + y(d.y) + ")"